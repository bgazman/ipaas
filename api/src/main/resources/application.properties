server.port=8080
spring.application.name=ipaas-api
# spring.security.oauth2.resourceserver.jwt.issuer-uri=http\://localhost\:9090/realms/ipaas
# spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

# spring.main.allow-bean-definition-overriding=true
# spring.main.web-application-type=reactive
# spring.security.oauth2.client.registration.keycloak.client-id=test-client
# spring.security.oauth2.client.registration.keycloak.client-secret=test-secret
# spring.security.oauth2.client.registration.keycloak.scope=openid
# spring.security.oauth2.client.provider.keycloak.issuer-uri=http\://localhost\:8080/auth/realms/test
# PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/ipaas
spring.datasource.username=ipaas_admin_user
spring.datasource.password=ipaas_admin_pwd
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.main.web-application-type=reactive